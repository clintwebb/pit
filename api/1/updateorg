#!/bin/bash
#
# PIT Backend API Script
# https://github.com/hyper/pit
# CGI Framework based from https://github.com/ruudud/cgi
#
########
# Update the orgpack for an organisation.
#
#     expected parameters.
#        oid:     idhash of the org being updated.
#        oldpack: pack that is being replaced.
#        newhash:
#        newpack:
#




if [[ "$SCRIPT_FILENAME" ]]; then
  . "$(dirname $SCRIPT_FILENAME)/.pit-common"
else
  . "$(dirname $(pwd)$SCRIPT_NAME)/.pit-common"
fi

# enable debugging for now.
PIT_DEBUG=1


# Common headers goes here.  We will always return a 200.
echo "Content-Type: application/json"
echo "Status: 200 OK"
echo ""




SOID=$(urldecode ${POST_PARAMS["oid"]})
SOH=$(urldecode ${POST_PARAMS["oh"]})
SOK=$(urldecode ${POST_PARAMS["ok"]})
SOD=$(urldecode ${POST_PARAMS["od"]})
SOS=$(urldecode ${POST_PARAMS["os"]})


debug_out "[updateorg] SOID:$SOID"


OLDPACK=$(query "SELECT OrgPack FROM Organisations WHERE OrgHash='$SOID'")
if [[ -n $OLDPACK ]]; then
  out_err "notexist" "organisation does not exist"
  exit 0;
fi
debug_out "[updateorg] OLDPACK: $OLDPACK"

PACKFILE=$PIT_DATA_DIR/packs/$SOID/${DOPACK:0:6}/$DOPACK.pack
debug_out "[updateorg] PACKFILE: $PACKFILE"


if [[ ! -e $PACKFILE  ]]; then
  out_err "packfail" "failed to find the pack"
  exit 0;
fi


echo "{"
echo "  \"success\": true,"
echo "  \"pack\": "
cat $PACKFILE
echo "}"


# everything should be good at this point, so we exit.  Everything else after this point, is assuming there was a failure.
exit 0



